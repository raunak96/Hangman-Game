{"version":3,"sources":["components/Header.jsx","components/Figure.jsx","components/WrongLetters.jsx","components/Word.jsx","helpers/helpers.js","components/Popup.jsx","components/Notification.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","style","textAlign","marginBottom","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","wrongLetter","index","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","letter","includes","displayNotification","setShowNotification","setTimeout","Popup","setPlayable","playAgain","finalMessage","correctWord","playable","status","forEach","checkWin","useEffect","id","display","onClick","Notification","showNotification","words","minLength","maxLength","exactly","join","App","useState","setCorrectLetters","setWrongLetters","handleKeyDown","e","keyCode","toLowerCase","window","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.98ee61fd.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nconst Header = () => {\n    return (\n        <Fragment>\n            <h1>Hangman</h1>\n            <p style={{textAlign:'center',marginBottom:'50px'}}>Find the hidden word - Enter a Letter</p>\n        </Fragment>\n    );\n};\n\nexport default Header;","import React from 'react';\n\nconst Figure = ({wrongLetters}) => {\n    const errors=wrongLetters.length;\n    return (\n        <svg height=\"250\" width=\"200\" className=\"figure-container\">\n        \n            {/* ROD */}\n            <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n            <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n            <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n            <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n            {/* HEAD */}\n            {errors>0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\n\n            {/* BODY */}\n            {errors>1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\n\n            {/* ARMS */}\n            {errors>2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\n            {errors>3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\n\n            {/* LEGS */}\n            {errors>4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\n            {errors>5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\n      </svg>\n    );\n};\n\nexport default Figure;","import React from 'react';\n\nconst WrongLetters = ({wrongLetters}) => {\n    return (\n        <div className=\"wrong-letters-container\">\n            <div>\n                {wrongLetters.length>0 && <p>Wrong Letters</p>}\n                {wrongLetters\n                    .map((wrongLetter,index)=> <span key={index}>{wrongLetter}</span>)\n                    .reduce((prev,curr)=>prev===null ? [curr]: [prev,',',curr],null)  // basically makes above spans seperated by commas\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default WrongLetters;","import React from 'react';\n\nconst Word = ({selectedWord, correctLetters}) => {\n    return (<div className=\"word\">\n        {\n            selectedWord.split('').map((letter,index)=>(\n                <span className=\"letter\" key={index}>\n                    {correctLetters.includes(letter) ? letter : \"\"}\n                </span>\n            ))\n        }\n    </div>);\n};\n\nexport default Word;","export const displayNotification= (setShowNotification)=>{\n    setShowNotification(true);\n    setTimeout(()=>setShowNotification(false),2000);\n};\n\nexport const checkWin = (correctLetters,wrongLetters,selectedWord)=>{\n    var status='win';\n    if(wrongLetters.length>=6)\n        status='lose';\n    else{\n        selectedWord.split('').forEach(letter=>{\n            if(!correctLetters.includes(letter))\n                status=''; // not lost yet\n        })\n    }\n    return status; \n}","import React, { useEffect } from 'react';\nimport { checkWin } from '../helpers/helpers';\n\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable,playAgain}) => {\n\n    let finalMessage='',correctWord='',playable=true;\n    const status= checkWin(correctLetters, wrongLetters, selectedWord);\n\n    if (status === \"win\") {\n        finalMessage = \"Congratulations! You won! ðŸ˜ƒ\";\n        playable = false;\n    } else if (status=== \"lose\") {\n        finalMessage = \"Unfortunately you lost. ðŸ˜•\";\n        correctWord = `...the word was: ${selectedWord}`;\n        playable = false;\n    }\n    useEffect(()=>{\n        setPlayable(playable);\n    });\n\n    return (\n        <div className=\"popup-container\" id=\"popup-container\" style={status!=='' ? {display:'flex'}:{}}>\n            <div className=\"popup\">\n                <h2>{finalMessage}</h2>\n                <h3>{correctWord}</h3>\n                <button onClick={playAgain}>Play Again</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Popup;","import React from 'react';\n\nconst Notification = ({showNotification}) => {\n    return (\n        <div className={`notification-container ${showNotification ? 'show' :''}`}>\n            <p>You have already entered this letter</p>\n        </div>\n    )\n};\n\nexport default Notification;","import React, { Fragment, useState,useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Figure from \"./components/Figure\";\nimport WrongLetters from \"./components/WrongLetters\";\nimport Word from \"./components/Word\";\nimport Popup from \"./components/Popup\";\nimport Notification from \"./components/Notification\";\nimport words from \"random-words\";\nimport { displayNotification } from \"./helpers/helpers\";\n\nvar selectedWord= words({minLength:5, maxLength:12,exactly:1}).join();\n\nconst App = () => {\n    \n    const [playable,setPlayable]= useState(true);\n    const [correctLetters,setCorrectLetters]= useState([]);\n    const [wrongLetters,setWrongLetters]= useState([]);\n    const [showNotification,setShowNotification]= useState(false);\n\n    const playAgain= ()=>{\n        // Reset States to initial value\n        setPlayable(true);\n        setCorrectLetters([]);\n        setWrongLetters([]);\n        setShowNotification(false);\n        selectedWord = words({ minLength: 5, maxLength: 12, exactly: 1 }).join();\n    }\n\n    useEffect(() => {\n        const handleKeyDown = e =>{\n            const {key,keyCode} = e;\n            var letter='';  \n            if(playable){\n                if (keyCode >= 97 && keyCode <= 122) letter = key;\n                else if (keyCode >= 65 && keyCode <= 90)\n                    letter = key.toLowerCase();\n                else return;\n                if (selectedWord.includes(letter)) {\n                    if (!correctLetters.includes(letter)) {                 // if typed letter not previously typed\n                        setCorrectLetters((correctLetters) => [ ...correctLetters, letter,]);\n                    } else {\n                        displayNotification(setShowNotification);\n                    }\n                } else {\n                    if (!wrongLetters.includes(letter)) {\n                        setWrongLetters((wrongLetters) => [...wrongLetters,letter,]);\n                    } else {\n                        displayNotification(setShowNotification);\n                    }\n                }\n\n            }\n        }\n        window.addEventListener('keydown', handleKeyDown);\n\n        // whenever useEffect runs previous again previous listener is removed so that we don't have multiple same listeners everytime state changes\n        return () => window.removeEventListener('keydown',handleKeyDown);  \n\n    }, [correctLetters,wrongLetters,playable]);\n\n    return (\n        <Fragment>\n            <Header />\n            <div className=\"game-container\">\n                <Figure wrongLetters={wrongLetters} />\n                <WrongLetters  wrongLetters={wrongLetters} />\n                <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n            </div>\n            <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain}/>\n            <Notification showNotification={showNotification}/>\n        </Fragment>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}